<?xml version="1.0" encoding="UTF-8"?>
<refentry id="pgarchivecleanup">
 <refmeta>
  <refentrytitle><application>pg_archivecleanup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_archivecleanup</refname>
  <refpurpose>clean up <productname>PostgreSQL</productname> WAL archive files</refpurpose>
 </refnamediv>

  <indexterm zone="pgarchivecleanup">
   <primary>pg_archivecleanup</primary>
  </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_archivecleanup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain"><replaceable>archivelocation</replaceable></arg>
   <arg choice="plain"><replaceable>oldestkeptwalfile</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

 <para>
  <application>pg_archivecleanup</application> est conçu pour être utilisé
  via le paramètre <literal>archive_cleanup_command</literal> pour nettoyer
  les archives des journaux de transactions lorsque le serveur est exécuté en
  tant que serveur en standby (voir <xref linkend="warm-standby"/>).
  <application>pg_archivecleanup</application> peut aussi être utilisé comme un programme
  autonome pour nettoyer les archives de journaux de transactions.
 </para>

  <para>
   Pour configurer un serveur en attente de façon à ce qu'il utilise
   <application>pg_archivecleanup</application>, placez ce qui suit dans le
   fichier de configuration <filename>recovery.conf</filename>&nbsp;:
  </para>
  <programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>RépArchive</replaceable> %r'
  </programlisting>
  <para>
   où <replaceable>RépArchive</replaceable> est le répertoire à partir duquel
   les journaux de transactions doivent être supprimés.
  </para>
  <para>
   S'il est utilisé via <xref linkend="archive-cleanup-command"/>,
   tous les fichiers des journaux de transactions qui précèdent la valeur de
   <literal>%r</literal> de façon logique seront supprimés de
   <replaceable>RépArchive</replaceable>. Ceci minimise le nombre de
   fichiers à conserver tout en préservant la capcité à redémarrer suite à un
   arrêt brutal. L'utilisation de ce paramètre est approprié si
   <replaceable>RépArchive</replaceable> est une aire de passage temporaire
   pour ce serveur en attente particulier, mais <emphasis>pas</emphasis> quand
   <replaceable>RépArchive</replaceable> a pour but d'être une archive à long
   terme des journaux de transactions ou quand plusieurs serveurs en standby
   utilisent le même emplacement pour les archives.
  </para>
  <para>
   S'il est utilisé en tant que programme autonome, tous les fichiers de
   journaux de transactions avant le <replaceable>oldestkeptwalfile</replaceable>
   seront supprimés de <replaceable>RépArchive</replaceable>. Dans ce mode,
   si vous indiquez un nom de fichier avec une extension <filename>.backup</filename>, alors seul
   le préfixe du fichier sera utilisé comme
   <replaceable>oldestkeptwalfile</replaceable>. Ceci vous permet de supprimer tous
   les fichiers des journaux de transactions archivés avant une sauvegarde de
   base spécifique sans erreur. Par exemple, l'exemple suivant supprime tous
   les fichiers plus anciens que le fichier
   <filename>000000010000003700000010</filename>&nbsp;:
  </para>
  <programlisting>
pg_archivecleanup -d archive 000000010000003700000010.00000020.backup

pg_archivecleanup:  keep WAL file "archive/000000010000003700000010" and later
pg_archivecleanup:  removing file "archive/00000001000000370000000F"
pg_archivecleanup:  removing file "archive/00000001000000370000000E"
  </programlisting>
  <para>
   <application>pg_archivecleanup</application> suppose que
   <replaceable>RépArchive</replaceable> est un répertoire lisible et
   modifiable par l'utilisateur qui a lancé le serveur.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

   <para>
    <application>pg_archivecleanup</application> accepte les arguments suivants
    en ligne de commande&nbsp;:

    <variablelist>

     <varlistentry>
      <term><option>-d</option></term>
      <listitem>
       <para>
        Affiche des informations de débogage sur <filename>stderr</filename>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <para>
        Print the names of the files that would have been removed on <filename>stdout</filename> (performs a dry run).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option> <replaceable>extension</replaceable></term>
      <listitem>
       <para>
        When using the program as a standalone utility, provide an extension
        that will be stripped from all file names before deciding if they
        should be deleted.  This is typically useful for cleaning up archives
        that have been compressed during storage, and therefore have had an
        extension added by the compression program. For example: <literal>-x
        .gz</literal>.
       </para>

       <para>
        Note that the
        <filename>.backup</filename> file name passed to the program should not
        include the extension.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
  <title>Notes</title>
 
  <para>
   <application>pg_archivecleanup</application> is designed to work with
   <productname>PostgreSQL</productname> 8.0 and later when used as a standalone utility,
   or with <productname>PostgreSQL</productname> 9.0 and later when used as an
   archive cleanup command.
  </para>

  <para>
   <application>pg_archivecleanup</application> is written in C and has an
   easy-to-modify source code, with specifically designated sections to modify
   for your own needs
  </para>
 </refsect1>
 
 <refsect1>
  <title>Exemples</title>

  <para>Sur des systèmes Linux ou Unix, vous pouvez utiliser&nbsp;:</para>

  <programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
  </programlisting>
  <para>
   Dans ce cas, le répertoire des archives est situé physiquement sur le
   serveur en attente. <varname>archive_command</varname> y accède via un
   montage NFS mais les fichiers sont accessibles directement sur le serveur
   en attente.
   La commande va&nbsp;:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     produire une sortie de débogage dans <filename>cleanup.log</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     supprimer les fichiers qui ne sont plus nécessaires à partir du
     répertoire d'archivage
    </para>
   </listitem>
  </itemizedlist>

 </refsect1>

 <refsect1>
  <title>Auteur</title>

  <para>
   Simon Riggs <email>simon@2ndquadrant.com</email>
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>
 
  <simplelist type="inline">
   <member><xref linkend="pgstandby"/></member>
  </simplelist>
 </refsect1>
</refentry>
