<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="pgupgrade" xreflabel="pg_upgrade">
 <title>pg_upgrade</title>

 <indexterm zone="pgupgrade">
  <primary>pg_upgrade</primary>
 </indexterm>

 <para>
  <application>pg_upgrade</application> (auparavant appelé <application>pg_migrator</application>) permet
  la mise à jour des fichiers de données d'une version majeure de
  <productname>PostgreSQL</productname> vers une autre version majeure sans
  nécessiter la partie sauvegarde/restauration typiquement requise pour les
  mises à jour majeures, par exemple de la version 8.4.7 à la version majeure
  courante de <productname>PostgreSQL</productname>. Cet outil n'est pas
  utile pour les mises à jour mineures, par exemple pour une migration de la
  9.0.1 à la 9.0.4.
 </para>

 <para>
  Les versions majeures de PostgreSQL ajoutent régulièrement de nouvelles
  fonctionnalités qui modifient la composition des tables systèmes. Par contre,
  le format de stockage des données change rarement.
  <application>pg_upgrade</application> utilise cette information pour réaliser
  des mises à jour rapides en créant les nouvelles tables systèmes et en
  réutilisant les anciens fichiers de données utilisateurs. Si une version
  majeure future change le format des données d'une façon qui rend l'ancien
  format illisible, <application>pg_upgrade</application> ne sera pas
  utilisable pour ces mises à jour. (La communauté tente d'éviter ce type de
  situation.)
 </para>

 <para>
  <application>pg_upgrade</application> fait de son mieux pour s'assurer que
  les clusters, ancien et nouveau, soient compatibles
  binairement, c'est-à-dire en vérificant les paramètres de temps modifiables
  à la compilation, en incluant les binaires 32/64 bits. Il est important que
  tout module externe soit aussi
  compatible binairement, bien que cela ne soit pas vérifié
  <application>pg_upgrade</application>.
 </para>

 <sect2>
  <title>Versions supportées</title>

  <para>
   pg_upgrade supporte la mise à jour de version 8.3.X et ultérieures vers la
   dernière version majeure de <productname>PostgreSQL</productname>, ceci
   incluant les versions intermédiaires (snapshots) et les versions alpha.
  </para>

 </sect2>

 <sect2>
  <title>Options de <application>pg_upgrade</application></title>

   <para>
    <application>pg_upgrade</application> accepte les arguments suivant en
    ligne de commande&nbsp;:

    <variablelist>

     <varlistentry>
      <term><option>-b</option> <replaceable>ancien_dir_exec</replaceable></term>
      <term><option>--old-bindir=</option><replaceable>ANCIENDIREXEC</replaceable></term>
      <listitem><para>indique le répertoire des exécutables de l'ancienne
        instance&nbsp;; variable d'environnement <envar>OLDBINDIR</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-B</option> <replaceable>nouveau_dir_exec</replaceable></term>
      <term><option>--new-bindir=</option><replaceable>NOUVEAUDIREXEC</replaceable></term>
      <listitem><para>indique le répertoire des exécutables de la nouvelle
        instance&nbsp;; variable d'environnement <envar>NEWBINDIR</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--check</option></term>
      <listitem><para>vérifie seulement les instances, ne modifie pas les
        données</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-d</option> <replaceable>ancien_repdonnées</replaceable></term>
      <term><option>--old-datadir=</option><replaceable>ANCIENREPDONNÉES</replaceable></term>
      <listitem><para>indique le répertoire des données de l'ancienne
        instance&nbsp;; variable d'environnement <envar>OLDDATADIR</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-D</option> <replaceable>nouveau_repdonnées</replaceable></term>
      <term><option>--new-datadir=</option><replaceable>NOUVEAUREPDONNÉES</replaceable></term>
      <listitem><para>indique le répertoire des données de la nouvelle
        instance&nbsp;; variable d'environnement <envar>NEWDATADIR</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-g</option></term>
      <term><option>--debug</option></term>
      <listitem><para>active les traces de débogage</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-G</option> <replaceable>fichier_debug</replaceable></term>
      <term><option>--debugfile=</option><replaceable>fichier_debug</replaceable></term>
      <listitem><para>enregistre les traces de débogage dans un
        fichier</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-k</option></term>
      <term><option>--link</option></term>
      <listitem><para>utilise des liens plutôt que de copier les fichiers vers
        la nouvelle instance</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l</option> <replaceable>fichier_trace</replaceable></term>
      <term><option>--logfile=</option><replaceable>fichier_trace</replaceable></term>
      <listitem><para>trace l'activité de la session dans un fichier</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p</option> <replaceable>ancien_port</replaceable></term>
      <term><option>--old-port=</option><replaceable>ancien_port</replaceable></term>
      <listitem><para>indique le numéro de port de l'ancienne
        instance&nbsp;; variable d'environnement <envar>PGPORT</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option> <replaceable>nouveau_port</replaceable></term>
      <term><option>--new-port=</option><replaceable>port</replaceable></term>
      <listitem><para>indique le numéro de port de la nouvelle
        instance&nbsp;; variable d'environnement <envar>PGPORT</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-u</option> <replaceable>nom_utilisateur</replaceable></term>
      <term><option>--user=</option><replaceable>nom_utilisateur</replaceable></term>
      <listitem><para>superutilisateur de l'instance&nbsp;;variable
        d'environnement <envar>PGUSER</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem><para>active la sortie verbeuse</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</option></term>
      <term><option>--version</option></term>
      <listitem><para>affiche la version puis quitte</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</option></term>
      <term><option>-h</option></term>
      <term><option>--help</option></term>
      <listitem><para>affiche l'aide puis quitte</para></listitem>
     </varlistentry>

    </variablelist>
   </para>

 </sect2>

 <sect2>
  <title>Étapes de mise à jour</title>

  <procedure>
   <step performance="optional">
    <title>Si nécessaire, déplacez l'ancienne instance</title>
 
    <para>
     Si vous utilisez un répertoire d'installation spécifique à la version,
     par exemple <filename>/opt/PostgreSQL/8.4</filename>, vous n'avez pas besoin de déplacer
     l'ancien répertoire de l'instance. Les installeurs one-click utilisent
     tous des répertoires d'installation spécifiques à la version.
    </para>
 
    <para>    
     Si votre répertoire d'installation n'est pas spécifique à la version,
     par exemple <filename>/usr/local/pgsql</filename>, il est nécessaire de déplacer le répertoire
     d'installation actuelle de PostgreSQL pour qu'il n'interfère pas avec la
     nouvelle installation de <productname>PostgreSQL</productname>. Une fois
     que le serveur actuel <productname>PostgreSQL</productname> est arrêté,
     il est bon de renommer le répertoire d'installation de PostgreSQL&nbsp;;
     en supposant que l'ancien répertoire est <filename>/usr/local/pgsql</filename>, vous pouvez
     saisir ceci&nbsp;:
 
<programlisting>
mv /usr/local/pgsql /usr/local/pgsql.old
</programlisting>
     pour renommer le répertoire.
    </para>
   </step>
 
   <step>
    <title>Pour une installation par les sources, construisez la nouvelle version</title>
 
    <para>
     Construisez la nouvelle version de PostgreSQL avec des options de
     compilation compatibles avec l'ancienne instance.
     <application>pg_upgrade</application> utilisera
     <command>pg_controldata</command> pour vérifier que tous les paramètres
     sont compatibles avant de lancer la mise à jour.
    </para>
   </step>
 
   <step>
    <title>Installez les nouveaux exécutables de PostgreSQL</title>
 
    <para>
     Installez les nouveaux exécutables du serveur ainsi que les fichiers de
     support. Vous pouvez utiliser les même numéros de port, habituellement le
     5432, car l'ancienne et la nouvelle instance ne seront pas exécutées en
     même temps.
    </para>
 
    <para>
     Pour les installations à partir des sources, si vous préférez installer
     le nouveau serveur dans un emplacement particulier, utilisez le mot clé
     <literal>prefix</literal>&nbsp;:
 
<programlisting>
gmake prefix=/usr/local/pgsql.new install
</programlisting>
    </para>
   </step>
 
   <step>
    <title>Installez pg_upgrade et pg_upgrade_support</title>
    <para>
     Installez l'exécutable <application>pg_upgrade</application> et la
     bibliothèque
     <application>pg_upgrade_support</application> dans la nouvelle instance
     PostgreSQL
    </para>
   </step>
 
   <step>
    <title>Initialisez la nouvelle instance PostgreSQL</title>
 
    <para>
     Initialisez la nouvelle instance avec <command>initdb</command>.
     Encore une fois, utilisez des options d'<command>initdb</command> qui
     correspondent à celles
     de l'ancienne instance. Beaucoup d'installeurs font cette étape
     automatiquement. Il n'est pas nécessaire de démarrer la nouvelle
     instance.
    </para>
   </step>
 
   <step>
    <title>Installez les fichiers objets partagés personnalisés (ou DLL)</title>
 
    <para>
     Installez tous fichiers objets partagés personnalisés (ou DLL) utilisés
     par l'ancien cluster dans le nouveau cluster, par exemple
     <filename>pgcrypto.so</filename>, qu'ils proviennent des modules
     <filename>contrib</filename> ou de toute autre source. N'installez pas
     les définitions du schéma, par exemple <filename>pgcrypto.sql</filename>,
     car elles seront aussi mises à jour à partir de l'ancien cluster.
    </para>
   </step>
 
   <step>
    <title>Adjustez l'authentification</title>
 
    <para>
     <command>pg_upgrade</command> se connectera à l'ancien et au nouveau serveurs plusieurs fois.
     Vous devez donc configurer l'authentification à <literal>trust</literal>
     dans <filename>pg_hba.conf</filename> ou, si vous utilisez
     l'authentification <literal>md5</literal>, configurer un fichier
     <filename>~/.pgpass</filename> (voir <xref linkend="libpq-pgpass"/> pour
     les détails) pour éviter d'avoir à saisir de façon répétée le mot de
     passe.
    </para>
   </step>
 
   <step>
    <title>Arrêtez les deux serveurs</title>
 
    <para>
     Assurez-vous que les deux serveurs de bases de données sont stoppés. Pour
     cela, vous pouvez utiliser la commande suivante sous Unix&nbsp;:
 
<programlisting>
pg_ctl -D /opt/PostgreSQL/8.4 stop
pg_ctl -D /opt/PostgreSQL/9.0 stop
</programlisting>
 
     et la commande suivante sous Windows (en utilisant les bons noms de
     service)&nbsp;:
 
<programlisting>
NET STOP postgresql-8.4
NET STOP postgresql-9.0
</programlisting>
 
     ou encore&nbsp;:
 
<programlisting>
NET STOP pgsql-8.3  (<productname>PostgreSQL</productname> 8.3 et antérieurs
utilisent un autre nom de service)
</programlisting>
    </para>
   </step>
 
   <step>
    <title>Exécutez <application>pg_upgrade</application></title>
 
    <para>
     Exécutez toujours le binaire <application>pg_upgrade</application> dans
     le nouveau serveur, pas l'ancien. <application>pg_upgrade</application>
     nécessite de spécifier les repértoires de l'instance
     (<varname>PGDATA</varname>) et des exécutables pour l'ancien et la
     nouvelle instance (<filename>bin</filename>). Vous pouvez aussi indiquer des valeurs
     pour l'utilisateur et le port, et si vous voulez que les données soient
     ajoutées par lien ou par copie (cette dernière étant la valeur par
     défaut).
    </para>

    <para>
     Si vous utilisez les liens, la mise à jour sera bien plus rapide
     (pas de copie de données), mais vous ne serez plus capable d'accéder à
     votre ancienne instance une fois que vous aurez démarrer la nouvelle
     instance après la mise à jour. Le mode des liens nécessite aussi
     que les répertoires des données de l'ancienne et de la nouvelle
     instances soient situés sur le même système de fichiers. Voir
     <literal>pg_upgrade --help</literal> pour une liste complète des
     options.
    </para>
 
    <para>
     Pour les utilisateurs Windows, vous devez être connecté avec un compte
     administrateur, puis lancé un shell en tant qu'utilisateur <literal>postgres</literal> et
     configuré la variable PATH correctement&nbsp;:
 
<programlisting>
RUNAS /USER:postgres "CMD.EXE"
SET PATH=%PATH%;C:\Program Files\PostgreSQL\9.0\bin;
</programlisting>
 
     Enfin, vous lancez <application>pg_upgrade</application> avec les noms
     des répertoires entre guillemets doubles, par exemple&nbsp;:
 
<programlisting>
pg_upgrade.exe
        --old-datadir "C:/Program Files/PostgreSQL/8.4/data"
        --new-datadir "C:/Program Files/PostgreSQL/9.0/data"
        --old-bindir "C:/Program Files/PostgreSQL/8.4/bin"
        --new-bindir "C:/Program Files/PostgreSQL/9.0/bin"
</programlisting>
 
     Une fois lancé, <command>pg_upgrade</command> vérifiera que les deux instances sont
     compatibles puis lancera la mise à jour. vous pouvez utiliser <command>pg_upgrade
     --check</command> pour ne faire que les vérifications, même si
     l'ancienne installation est en cours d'exécution. <command>pg_upgrade
     --check</command> indiquera aussi tout ajustement manuel que vous
     devrez faire après la mise à jour. <command>pg_upgrade</command> réclame
     des droits en écriture dans le répertoire courant.
    </para>
 
    <para>
     Évidemment, personne ne doit accéder aux instances pendant la mise
     à jour. Pensez à utiliser un numéro de port différent de celui
     par défaut (par exemple 50432) pour l'ancienne et la nouvelle
     instance pour éviter des connexions clients inattendues lors de la
     mise à jour.
    </para>
 
    <para>
     Si une erreur survient lors de la restauration du schéma de la base de
     données, <command>pg_upgrade</command> quittera et vous devrez retourner sur l'ancienne
     instance comme indiqué dans <xref linkend="pgupgrade-step-revert"/>. Pour essayer de nouveau
     pg_upgrade, vous aurez besoin de modifier l'ancienne instance pour que
     la restauration du du schéma par <command>pg_upgrade</command> réussisse. Si le problème
     est dû à un module contrib, vous pourriez avoir besoin de désinstaller
     le module contrib à partir de l'ancienne instance et de l'installer sur
     la nouvelle après la mise à jour en espérant que le module n'est pas
     utilisé pour stocker des données de l'utilisateur.
    </para>
   </step>
 
   <step>
    <title>Restaurez <filename>pg_hba.conf</filename></title>
 
    <para>
     Si vous avez modifié <filename>pg_hba.conf</filename> pour utiliser
     <literal>trust</literal>, restaurez-le à sa configuration d'origine.
    </para>
   </step>
 
   <step>
    <title>Traitement post-mise à jour</title>
 
    <para>
     Si tout traitement post-mise à jour est requis, pg_upgrade lancera des
     avertissements à la fin de son travail. Il générera aussi des fichiers
     de script à exécuter par l'administrateur. Les fichiers de script se
     connecteront à chaque base de données pour réaliser un traitement
     post-mise à jour. Chaque script doit être exécuté avec la commande
     suivante&nbsp;:
 
<programlisting>
psql --username postgres --file script.sql postgres
</programlisting>
 
     Ces scripts peuvent être exécutés dans n'importe quel ordre et peuvent
     être supprimés une fois qu'ils ont été exécutés.
    </para>

    <caution> 
    <para>
     En général, il n'est pas prudent d'accéder aux tables référencées dans
     les scripts de reconstruction tant que ses scripts n'ont pas été exécutés
     entièrement&nbsp;; le faire malgré tout pourrait amener des résultats
     incorrects ou des contre-performances. Les tables non référencées dans
     les scripts de reconstruction peuvent être utilisées immédiatement.
    </para>
    </caution>
   </step>
 
   <step>
    <title>Statistiques</title>
    <caution> 
    <para>
     Comme les statistiques de l'optimiseur ne sont pas transférées par
     pg_upgrade, il vous sera demandé d'exécuter une commande pour regénérer
     les informations statistiques à la fin de la mise à jour.
    </para>
    </caution>
   </step>
 
   <step>
    <title>Supprimez l'ancienne instance</title>
 
    <para>
     Une fois que vous être satisfait par la mise à jour, vous pouvez
     supprimer les répertoires de données de l'ancienne instance en exécutant
     le script mentionné à la fin de <command>pg_upgrade</command>. Vous
     devrez supprimer manuellement les anciens répertoires d'installation, par
     exemple <filename>bin</filename>, <filename>share</filename>.
    </para>
   </step>
 
   <step id="pgupgrade-step-revert" performance="optional">
    <title>Retourner sur l'ancienne instance</title>
 
    <para>
     Si, après avoir exécuté <command>pg_upgrade</command>, vous souhaitez retourner à l'ancienne
     instance, il existe plusieurs options.
    </para>
 
     <itemizedlist>
      <listitem>
       <para>
        Si vous avez exécuté <command>pg_upgrade</command> avec l'option
        <option>--check</option>, aucune modification n'a eu lieu sur
        l'ancienne instance, donc vous pouvez la réutiliser immédiatement.
       </para>
      </listitem>

      <listitem>
       <para>
        Si vous avez exécuté <command>pg_upgrade</command> avec l'option
        <option>--link</option>, les fichiers de données sont partagés entre
        l'ancienne et la nouvelle instances. Si vous avez démarré la nouvelle
        instance, le nouveau serveur a écrit dans les fichiers partagés et il
        est du coup dangereux d'utiliser l'ancienne instance.
       </para>
      </listitem>

      <listitem>
       <para>
        Si vous avez exécuté <command>pg_upgrade</command>
        <emphasis>sans</emphasis> l'option <option>--link</option> ou si vous
        n'avez pas lancé le nouveau serveur, l'ancienne instance n'a pas été
        modifiée mais un suffixe <filename>.old</filename> a été ajouté au
        fichier <filename>$PGDATA/global/pg_control</filename> et peut-être
        aux répertoires des tablespaces. Pour réutiliser l'ancienne instance,
        supprimez le suffixe <filename>.old</filename> du fichier
        <filename>$PGDATA/global/pg_control</filename>. De plus, si vous
        mettez à jour d'une version 8.4 ou antérieure, supprimez les répertoires des
        tablespaces créés par l'outil de mise à jour et supprimez le suffixe
        <literal>.old</literal> du nom des répertoires des tablespaces&nbsp;;
        après cela, vous pouvez redémarré l'ancienne instance.
       </para>
      </listitem>
     </itemizedlist>
   </step>
  </procedure>
 
  </sect2>
 
  <sect2>
  <title>Limitations pour les mises à jour <emphasis>à partir de</emphasis> PostgreSQL 8.3</title>
 
  <para>
   La mise à jour à partir de PostgreSQL 8.3 comporte quelques restrictions
   supplémentaires. Par exemple, pg_upgrade ne fonctionnera pas pour une
   mise à jour à partir d'une 8.3 si une colonne utilisateur est définie
   comme&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
      le type de données <type>tsquery</type>
     </para>
    </listitem>
    <listitem>
     <para>
      le type de données <type>name</type> et qu'il ne s'agit pas de la
      première colonne
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Vous devez supprimer ce type de colonnes et les mettre à jour manuellement.
  </para>
 
  <para>
   pg_upgrade ne fonctionnera pas si le module contrib
   <filename>ltree</filename> est installé dans une base de données.
  </para>

  <para>
   pg_upgrade nécessitera une reconstruction de la table si&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
      une colonne utilisateur est de type <type>tsvector</type>
     </para>
    </listitem>
   </itemizedlist>
  </para>
 
  <para>
   pg_upgrade nécessitera un réindexage si&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
      un index est de type hash ou GIN
     </para>
    </listitem>
    <listitem>
     <para>
      un index utilise <function>bpchar_pattern_ops</function>
     </para>
    </listitem>
   </itemizedlist>
  </para>
 
  <para>
   De plus, le format de stockage des dates et heures par défaut a changé
   vers l'entier après l'arrivée de <productname>PostgreSQL</productname> 8.3.
   pg_upgrade vérifiera que le format de stockage utilisé sur l'ancienne
   instance correspond à celui utilisé sur la nouvelle instance. Assurez-vous
   que votre nouvelle instance est construit avec le drapeau de configuration
   <option>--disable-integer-datetimes</option>.
  </para>
 
  <para>
   Pour les utilisateurs Windows, notez que, dû à une configuration différente
   sur ce paramètre par l'installeur one-click et l'installeur MSI, il est
   seulement possible de mettre à jour une version 8.3 provenant de l'installeur
   one-click vers la version 8.4 ou ultérieure de l'installeur one-click. Il
   n'est pas possible de mettre à jour un répertoire des données créé par
   l'installeur MSI à un répertoire de données créé par l'installeur one-click.
  </para>
 
 </sect2>
 
 <sect2>
  <title>Notes</title>
 
  <para>  
   <application>pg_upgrade</application> n'offre pas le support de la
   mise à jour de bases de données contenant ces types de données référençant
   les OID systèmes&nbsp;:
   <type>regproc</type>, <type>regprocedure</type>, <type>regoper</type>,
   <type>regoperator</type>, <type>regconfig</type> et
   <type>regdictionary</type>. (<type>regtype</type> peut être mis à jour.)
  </para>
 
  <para>  
   Tout échec, reconstruction, réindexage sera indiqué par
   <application>pg_upgrade</application> s'ils affectent votre
   installation&nbsp;; les scripts post-mise à jour pour reconstruire les tables
   et index seront automatiquement générés. 
  </para>
 
  <para>
   Pour un test en déploiement, créez une copie de schéma seul de l'ancienne
   instance, insérer des données au hasard et faites un test de mise à jour
   là-dessus. 
  </para>
 
  <para>  
   Si vous voulez utiliser le mode des liens et que vous ne voulez pas que
   votre ancienne instance soit modifiée quand vous lancez la nouvelle
   instance, faites une copie de l'ancienne instance et mettez-la à jour avec le mode
   des liens. Pour obtenir une copie valide de l'ancienne instance, utilisez
   <command>rsync</command> pour créer une copie sale de l'ancienne
   instance et exécutez <command>rsync</command> de nouveau après arrêt de
   l'ancienne instance pour mettre à jour la copie avec toutes les
   modifications ultérieures.
  </para>
 
 </sect2>
 
</sect1>

