<!--
doc/src/sgml/ref/create_extension.sgml
PostgreSQL documentation
-->

<refentry id="sql-createextension">
 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions de langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EXTENSION</refname>
  <refpurpose>installe une nouvelle extension</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">nom_extension</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">nom_schema</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ FROM <replaceable class="parameter">ancienne_version</replaceable> ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE EXTENSION</command> charge une nouvelle extension dans la
   base de donnée courante. Il ne doit pas y avoir d'extension déjà chargée
   portant le même nom.
  </para>

  <para>
   Charger une extension consiste essentiellement à exécuter le script de l'extension.
   Ce script va créer dans la plupart des cas de nouveaux objets <acronym>SQL</acronym>
   comme des fonctions, des types de données, des opérateurs et des méthodes d'indexation.
   La commande <command>CREATE EXTENSION</command> enregistre en supplément les identifiants
   de chacun des objets créés, permettant ainsi de les supprimer lorsque la commande
   <command>DROP EXTENSION</command> est appelée.
  </para>

  <para>
   Le chargement d'une extension nécessite les mêmes droits que ceux
   qui permettent la création de ses objets. La plupart des extensions
   nécessitent ainsi des droits superutilisateur ou d'être le propriétaire
   de la base de donnée.
   L'utilisateur qui lance la commande <command>CREATE EXTENSION</command>
   devient alors le propriétaire de l'extension (une vérification ultérieure
   des droits permettra de le confirmer) et le propriétaire de chacun
   des objets créé par le script de l'extension.
  </para>

 </refsect1>

 <refsect1>
  <title>Paramètres</title>

    <variablelist>
     <varlistentry>
      <term><literal>IF NOT EXISTS</literal></term>
      <listitem>
       <para>
	    Permet de ne pas retourner d'erreur si une extension de même nom existe déjà.
	    Un simple message d'avertissement est alors rapporté. À noter que l'extension
	    existante n'a potentiellement aucun lien avec l'extension qui aurait pu être créée.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nom_extension</replaceable></term>
      <listitem>
       <para>
	    Le nom de l'extension à installer. <productname>PostgreSQL</productname> 
		créera alors l'extension en utilisant les instructions du fichier de contrôle 
        <literal>SHAREDIR/extension/</literal><replaceable class="parameter">nom_extension</replaceable><literal>.control</literal> .
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nom_schema</replaceable></term>
      <listitem>
       <para>
	    Le nom du schéma dans lequel installer les objets de l'extension, en supposant
		que l'extension permette de déplacer ses objets dans un autre schéma.
		Le schéma en question doit exister au préalable.
	    Si ce nom n'est pas spécifié et que le fichier de contrôle de l'extension
		ne spécifie pas de schéma, le schéma par défaut en cours sera utilisé.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">version</replaceable></term>
      <listitem>
       <para>
	    La version de l'extension à installer. Il peut s'agir d'un identifiant
		autant que d'une chaîne de caractère. La version par défaut est celle
		spécifiée dans le fichier de contrôle de l'extension.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">ancienne_version</replaceable></term>
      <listitem>
       <para>
        L'option <literal>FROM</literal> <replaceable class="parameter">ancienne_version</replaceable>
        doit être spécifiée si et seulement s'il s'agit de convertir un module ancienne génération
		(qui est en fait une simple collection d'objets non empaquetée) en extension.
		Cette option modifie le comportement de la commande <command>CREATE EXTENSION</command>
		pour exécuter un script d'installation alternatif qui incorpore les objets existant dans 
		l'extension, plutôt que de créer de nouveaux objets. Il faut prendre garde à ce que
		<literal>SCHEMA</literal> spécifie le schéma qui contient ces objets pré-existant.
       </para>

       <para>
	    La valeur à utiliser pour le paramètre <replaceable class="parameter">ancienne_version</replaceable>
		est déterminée par l'auteur de l'extension et peut varier s'il existe plus d'une version
		du module ancienne génération qui peut évoluer en une extension.
		Concernant les modules additionnels fournis en standard avant
        <productname>PostgreSQL</productname> 9.1, il est nécessaire d'utiliser
        la valeur <literal>unpackaged</literal> pour le paramètre 
		<replaceable class="parameter">ancienne_version</replaceable> pour les faire évoluer en extension.
       </para>
      </listitem>
     </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Avant d'utiliser la commande <command>CREATE EXTENSION</command> pour charger
   une extension dans une base de données, il est nécessaire d'installer les fichiers qui l'accompagnent.
   Les informations de <link linkend="contrib">Modules supplémentaires fournis</link> 
   permettent d'installer les extensions fournies avec <productname>PostgreSQL</productname>.
  </para>

  <para>
   Les extensions disponibles à l'installation sur le serveur peuvent être identifiées au moyen des vues systèmes
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   et
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>.
  </para>

  <para>
   Pour obtenir des informations sur l'écriture de nouvelles extensions, consultez
   <xref linkend="extend-extensions"/>.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Installer l'extension <link linkend="hstore">hstore</link> dans la base de
   données courante&nbsp;:
<programlisting>
CREATE EXTENSION hstore;
</programlisting>
  </para>

  <para>
   Mettre à jour le module pré-9.1 <literal>hstore</literal> sous la forme
   d'une extension&nbsp;:
<programlisting>
CREATE EXTENSION hstore SCHEMA public FROM unpackaged;
</programlisting>
   Prenez garde à bien spécifier le schéma vers lequel vous souhaitez installer
   les objets de <literal>hstore</literal>.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   La commande <command>CREATE EXTENSION</command> est spécifique à
   <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterextension"/></member>
   <member><xref linkend="sql-dropextension"/></member>
  </simplelist>
 </refsect1>

</refentry>
